jmp begin 		; переход на начало алгоритма
.org 10 		; установить значение счетчика адреса команд 10.
MA: .ds 10 		; резервирование 16 байтов под массив A
MB: .ds 8 		; резервирование 8 байтов под массив B
MC: .ds 8 		; резервирование 8 байтов под массив C
N: .ds 1 		; резервирование 1 байта под кол-во элементов
CountA: .ds 1		; резервирование 1 байта под счётчика цикла A
CountB: .ds 1		; резервирование 1 байта под счётчика цикла B
CountC: .ds 1		; резервирование 1 байта под счётчика цикла C
begin: in 0 		; ввод количества элементов массивов
stor a,N 		; запомнить количество элементов по адресу N
mvi b,0 		; загрузить в рB начальный индекс эл-та масс. A
			; ЦИКЛ ЗАПОЛНЕНИЯ МАССИВА А
getA: push a 		; сохранить в стеке счетчик цикла A
in 1 			; ввести очередной элемент массива A
stor a,MA(b) 		; запомнить его по адресу MA+(b)
adi b,1 		; вычислить индекс следующего элемента
pop a 			; восстановить из стека счетчик цикла
loop a,getA 		; замкнуть цикл по метке geta

load a,N 		; загрузить количество элементов в rA из адреса N
mvi b,0 		; загрузить в рB начальный индекс эл-та масс. A
stor b,CountA		; запомнить количество элементов массива A по адресу CountA
stor b,CountB		; запомнить количество элементов массива B по адресу CountB
stor b,CountC		; запомнить количество элементов массива С по адресу CountС
			; ЗАПОЛНЕНИЕ МАССИВОВ B и C
add: push a 		; сохранить в стеке счетчик цикла A
load b,CountA		; загрузить в rB целое число для деления
mvi a,0			; занулить rA для последующего деления пары регистров
dvi a,2			; непосредствееное деление индекса из пары ячеек на 2
cmi a,0			; сравнение остатка от деления с нулем
jz addB			; переход по нулю на добавление элемента в массив B
			; ДОБАВЛЕНИЕ ЭЛЕМЕНТА В МАССИВ С
load b,CountA		; загрузка текущего индекса массива А в rB
load a,MA(b);		; загрузить в rA элемент массива A с индексом CountA
load b,CountC		; загрузка текущего индекса массива С в rB
stor a,MC(b) 		; запомнить его по адресу MС+(b)
adi b,1			; вычислить индекс следующего элемента массива C
stor b,CountC		; загрузить его
jmp label		; безусловный переход по метке
			; ДОБАВЛЕНИЕ ЭЛЕМЕНТА В МАССИВ B
addB: load b,CountA 	; загрузка текущего индека массива А в rB
load a,MA(b);		; загрузить в rA элемент массива A с индексом CountA
load b,CountB		; загрузка текущего индека массива B в rB
stor a,MB(b) 		; запомнить его по адресу MB+(b)
adi b,1			; вычислить индекс следующего элемента массива B
stor b,CountB		; загрузить его
			; МЕТКА
label: load a,CountA	; загрузить в rA текущий индекс А
adi a,1			; вычислить индекс следующего элемента массива А
stor a,CountA		; загрузить его
pop a 			; восстановить из стека счетчик цикла
loop a,add		; замкнуть цикл по метке add
			;
Stop 			; останов
.end			; закончить ассемблирование