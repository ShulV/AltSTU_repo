.base b		; rB - базовый
start: mvi b,start; ќтносительный адрес - в rB: rB - базовый
in 0		;ввод числа 'A' из порта с адресом 0 в –ќЌ a
stor a,A	;запомнить число 'A' по символическому адресу A
in 1		;ввод числа 'B' из порта с адресом 1 в –ќЌ a
stor a,B	;запомнить число 'B' по символическому адресу B
in 2		;ввод числа 'C' из порта с адресом 2 в –ќЌ a
stor a,C	;запомнить число 'C' по символическому адресу C
in 3		;ввод числа 'D' из порта с адресом 3 в –ќЌ a
stor a,D	;запомнить число 'D' по символическому адресу D

push b		;(rB)v (sp) сохранить базовый адpес в стеке
load a,B	;в rA загрузить 'A'
push a		;(rB)v (sp) сохранить базовый адpес в стеке
load b,A	; загpузить в rB A, использу€ относительный адpес
mui a,1		; pаспpостpанить знак
dvm a,1(sp)	; pазделить (rA,rB) на содержимое веpхушки стека
mov a,b		; пеpеслать частное в rA
pop b		; (sp)^(rB) : вытолкнуть из стека в rB B
pop b		; (sp)^(rb) : восстановить из стека базовый адрес
stor a,tmp	; запомнить по относительному адресу результат A/B
push b		;(rB)v (sp) сохранить базовый адpес в стеке

load b,D	;в rB загрузить 'D'
mur a,b		;(rB)*(rB)-> (rA,rB)
mov a,b		; пеpеслать частное в rA
pop b		; (sp)^(rb) : восстановить из стека базовый адрес
push b		;
push a		;

load b,c	;
mui a, 1	;расширить знак(преобразовать слово в двойное слово)
dvm a,1(sp)	;(rA,rB)/B-> частное в rB, остаток в rA
mov a,b		; пеpеслать частное в rA
pop b		; (sp)^(rB) : вытолкнуть из стека в rB B
pop b		; (sp)^(rb) : восстановить из стека базовый адрес
push b		;
push a		;

load a,tmp	;в rA загрузить 'tmp'
pop b		;
sbr a,b		;вычесть из (rA) (rB)
out 7		;вывод в 7 поле
stop		;стоп
A: .ds 1	;€чейка (1 зарезервированный байт) дл€ A
B: .ds 1	;€чейка (1 зарезервированный байт) дл€ B
C: .ds 1	;€чейка (1 зарезервированный байт) дл€ C
D: .ds 1	;€чейка (1 зарезервированный байт) дл€ D
tmp: .ds 1	;€чейка (1 зарезервированный байт) дл€ tmp
tmp2: .ds 1	;€чейка (1 зарезервированный байт) дл€ tmp2