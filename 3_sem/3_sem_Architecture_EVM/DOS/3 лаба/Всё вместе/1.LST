    1  00  b8  34  jmp begin                 ; переход на начало алгоритма
    2  02  00      .org 10                 ; установить значение счетчика адреса команд 10.
    3  10  00  00  MA: .ds 10                 ; резервирование 16 байтов под массив A
           00  00
           00  00
           00  00
           00  00
           00  00
           00  00
           00  00
    4  20  00  00  MB: .ds 8                 ; резервирование 8 байтов под массив B
           00  00
           00  00
           00  00
    5  28  00  00  MC: .ds 8                 ; резервирование 8 байтов под массив C
           00  00
           00  00
           00  00
    6  30  00      N: .ds 1                 ; резервирование 1 байта под кол-во элементов
    7  31  00      CountA: .ds 1                ; резервирование 1 байта под счётчика цикла A
    8  32  00      CountB: .ds 1                ; резервирование 1 байта под счётчика цикла B
    9  33  00      CountC: .ds 1                ; резервирование 1 байта под счётчика цикла C
   10  34  40      begin: in 0                 ; ввод количества элементов массивов
   11  35  18  30  stor a,N                 ; запомнить количество элементов по адресу n
   12  37  31  00  mvi b,0                 ; загрузить в рB начальный индекс эл-та масс. A
   13  39  00                              ; ЦИКЛ ЗАПОЛНЕНИЯ МАССИВА А
   14  39  20      getA: push a                 ; сохранить в стеке счетчик цикла A
   15  3a  41      in 1                         ; ввести очередной элемент массива A
   16  3b  1c  50  stor a,MA(b)                 ; запомнить его по адресу MA+(b)
   17  3d  61  01  adi b,1                 ; вычислить индекс следующего элемента
   18  3f  28      pop a                         ; восстановить из стека счетчик цикла
   19  40  e0  39  loop a,getA                 ; замкнуть цикл по метке geta
   21  42  10  30  load a,N                 ; загрузить количество элементов в rA из адреса N
   22  44  31  00  mvi b,0                 ; загрузить в рB начальный индекс эл-та масс. A
   23  46  19  31  stor b,CountA                ; запомнить количество элементов массива A по адре
   24  48  19  32  stor b,CountB                ; запомнить количество элементов массива B по адре
   25  4a  19  33  stor b,CountC                ; запомнить количество элементов массива С по адре
   26  4c  00                              ; ЗАПОЛНЕНИЕ МАССИВОВ B и C
   27  4c  20      add: push a                 ; сохранить в стеке счетчик цикла A
   28  4d  11  31  load b,CountA                ; целое число для деления
   29  4f  30  00  mvi a,0                        ; занулить rA для последующего деления пары реги
   30  51  a0  02  dvi a,2                        ; непосредствееное деление индекса из А на 2
   31  53  b0  00  cmi a,0                        ; сравнение остатка от деления с нулем
   32  55  ba  65  jz addB                        ; переход по нулю на добавление элемента в масси
   33  57  00                              ; ДОБАВЛЕНИЕ ЭЛЕМЕНТА В МАССИВ С
   34  57  11  31  load b,CountA                ; загрузка текущего индека массива А в rB
   35  59  14  50  load a,MA(b);                ; загрузить в rA элемент массива A с индексом Coun
   36  5b  11  33  load b,CountC                ; загрузка текущего индека массива С в rB
   37  5d  1c  68  stor a,MC(b)                 ; запомнить его по адресу MС+(b)
   38  5f  61  01  adi b,1                        ; вычислить индекс следующего элемента массива C
   39  61  19  33  stor b,CountC                ; загрузить его
   40  63  b8  71  jmp label                ; безусловный переход по метке в конец цикла
   41  65  00                              ; ДОБАВЛЕНИЕ ЭЛЕМЕНТА В МАССИВ B
   42  65  11  31  addB: load b,CountA         ; загрузка текущего индека массива А в rB
   43  67  14  50  load a,MA(b);                ; загрузить в rA элемент массива A с индексом Coun
   44  69  11  32  load b,CountB                ; загрузка текущего индека массива B в rB
   45  6b  1c  60  stor a,MB(b)                 ; запомнить его по адресу MB+(b)
   46  6d  61  01  adi b,1                        ; вычислить индекс следующего элемента массива B
   47  6f  19  32  stor b,CountB                ; загрузить его
   48  71  10  31  label: load a,CountA        ; загрузить в rA текущий индекс А
   49  73  60  01  adi a,1                        ; вычислить индекс следующего элемента массива А
   50  75  18  31  stor a,CountA                ; загрузить его
   51  77  28      pop a                         ; восстановить из стека счетчик цикла
   52  78  e0  4c  loop a,add                ; замкнуть цикл по метке add
   53  7a  f8      Stop                         ; останов
   54  7b  00      .end                        ; закончить ассемблирование

    ***** ’ Ў«Ёж  ЇҐаҐЄаҐбв­ле ббл«®Є *****
  Ё¬п     ®ЇаҐ¤Ґ«Ґ­ЁҐ     ббл«ЄЁ

 N        30              43  36                                               
 MC       28              5e                                                   
 MB       20              6c                                                   
 MA       10              68  5a  3c                                           
 LABEL    71              64                                                   
 GETA     39              41                                                   
 COUNTC   33              62  5c  4b                                           
 COUNTB   32              70  6a  49                                           
 COUNTA   31              76  72  66  58  4e  47                               
 BEGIN    34              1                                                    
 ADDB     65              56                                                   
 ADD      4c              79                                                   

  **** ЌҐ ®Ў­ аг¦Ґ­® ®иЁЎ®Є. “бЇҐи­®Ґ § ўҐаиҐ­ЁҐ ****

