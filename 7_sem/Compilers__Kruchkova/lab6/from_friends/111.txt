void SyntaxAnalis::AnaliseVariable() {
    scaner.scan(currentType, currentLex);
    if (currentType != type_ident) ShowError("Not id");
    savePoint = scaner.GetPtr();
    saveLine = scaner.GetLine();
    scaner.scan(currentType, currentLex);
    if (currentType == type_assign) {
        AnaliseExpression();
    }
    else if (currentType == type_square_lparenthesis) {
        scaner.SetPtr(savePoint);
        scaner.SetLine(saveLine);
        AnaliseSquare();
        scaner.scan(currentType, currentLex);
        if (currentType != type_assign) ShowError("Not =");
        scaner.scan(currentType, currentLex);
        if (currentType != type_lparenthesis) ShowError("Not {");
        do {
            scaner.scan(currentType, currentLex);
            if (currentType != type_int_const) ShowError("Not const");
            scaner.scan(currentType, currentLex);
        } while (currentType == type_comma);
        if (currentType != type_rparenthesis) ShowError("Not }");
    }
    else {
        scaner.SetPtr(savePoint);
        scaner.SetLine(saveLine);
    }
}