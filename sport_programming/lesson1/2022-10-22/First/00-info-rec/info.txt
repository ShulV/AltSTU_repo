РЕКУРСИВНЫЕ ФУНКЦИИ И МЕМОРИЗАЦИЯ
    1. Определения
~~~~~~~~~~~~~~~~~~~~~~~~

1.1. Рекурсия - это вызов функции в этой же функции

Необходимые   конструктивные элементы кода рекурсивной программы:]

   inr rec ( <параметры> ) {
         if ( <некоторое условие> )
              < код без рекурсивного вызова>
         else {
            ...
            rec( <другие значения параметров> );
            ...
          }
    }

1.2. Меморизация - сохранение в массиве уже вычисленных значений функции.
Индекс зависит от параметра функции rec.

Пример
Вычислить значение функции
 F(n) = n, при n <= 5,
 F(n) = n + F(n / 3 + 2), когда n > 5 и делится на 3,
 F(n) = F(n - 3) - F(n/2) + 3, когда n > 5 и не делится на 3.

const int inf = 1000*1000*1000;
vector <int> result(MAXN, inf);  // массив для хранения значений функции
                              // перед работой сrec его надо заполнить inf
                              // inf - такое число, которому не может равняться F()
int rec(int n){
    if (result[n] != inf) return result[n];   // уже вычисляли
 
   if (n <= 5) result[n] = n;
   else
   if (n%3 == 0) result[n] =  n +  rec(n / 3 + 2); 
   else result[n] = rec(n - 3) - rec(n/2) + 3; 
   return result[n];
}


